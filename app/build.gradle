buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'io.fabric'
apply plugin: 'me.tatarka.retrolambda'

android {
  compileSdkVersion 25
  buildToolsVersion '25.0.0'

  lintOptions {
    checkReleaseBuilds true
    lintConfig file("lint.xml")
  }

  defaultConfig {
    minSdkVersion 14
    targetSdkVersion 25
    versionCode 2720
    versionName "2.7.2"
  }

  signingConfigs {
    release {
      storeFile file("/home/khairulimam/workspaces/MobileDev/KeyStore.jks")
      storePassword "mantap123"
      keyAlias "KeyStore"
      keyPassword "mantap123"
    }
  }

  productFlavors {

    odoj {
      applicationId "com.quran.labs.androidquran.odoj"
      versionCode 1000
      versionName "1.0.0"
    }

    madani {
      applicationId "com.quran.labs.androidquran"
    }

    qaloon {
      applicationId "com.quran.labs.androidquran.qaloon"
      versionCode 1050
      versionName "1.0.5"
    }

    naskh {
      applicationId "com.quran.labs.androidquran.naskh"
      versionCode 1050
      versionName "1.0.5"
    }

    shemerly {
      applicationId "com.quran.labs.androidquran.shemerly"
      versionCode 1050
      versionName "1.0.5"
    }
  }

  buildTypes {
    beta {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard.cfg'
      signingConfig signingConfigs.release
      versionNameSuffix "-beta"
      if (project.hasProperty('disableCrashlytics')) {
        ext.enableCrashlytics = false
      }
    }

    debug {
      ext.enableCrashlytics = false
      applicationIdSuffix ".debug"
      versionNameSuffix "-debug"
    }

    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard.cfg'
      signingConfig signingConfigs.release
      if (project.hasProperty('disableCrashlytics')) {
        ext.enableCrashlytics = false
      }
    }
  }

  applicationVariants.all { variant ->
    resValue "string", "authority", applicationId + '.data.QuranDataProvider'
    resValue "string", "file_authority", applicationId + '.fileprovider'
    if (applicationId.endsWith("debug")) {
      mergedFlavor.manifestPlaceholders = [app_debug_label: "Quran " + flavorName.capitalize()]
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  testOptions.unitTests.all {
    testLogging {
      events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
      outputs.upToDateWhen { false }
      showStandardStreams true
      exceptionFormat "full"
    }
  }
}

ext {
  supportLibVersion = '25.1.0'
}

dependencies {
  compile "com.android.support:support-v4:${supportLibVersion}"
  compile "com.android.support:appcompat-v7:${supportLibVersion}"
  compile "com.android.support:recyclerview-v7:${supportLibVersion}"
  compile "com.android.support:design:${supportLibVersion}"
  compile 'io.reactivex.rxjava2:rxjava:2.0.2'
  compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
  annotationProcessor 'com.google.dagger:dagger-compiler:2.8'
  compile 'com.google.dagger:dagger:2.8'
  compile 'com.squareup.okhttp3:okhttp:3.5.0'
  compile 'com.squareup.moshi:moshi:1.3.1'
  compile 'com.jakewharton.timber:timber:4.4.0'
  compile 'com.jakewharton:butterknife:8.4.0'
  annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
  debugCompile 'com.facebook.stetho:stetho:1.4.1'
  debugCompile 'com.facebook.stetho:stetho-okhttp3:1.4.1'
  debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
  testCompile 'junit:junit:4.12'
  testCompile 'com.google.truth:truth:0.30'
  testCompile "org.mockito:mockito-core:1.10.19"
  testCompile 'com.squareup.okhttp3:mockwebserver:3.5.0'
  compile('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
    transitive = true;
  }
}
